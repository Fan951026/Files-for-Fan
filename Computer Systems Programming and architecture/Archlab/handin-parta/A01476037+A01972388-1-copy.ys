# Taylor Hansen & Xuecong Fan
# A01476037 & A01972388

# Execution begins at address 0
        .pos 0
        irmovq stack, %rsp      # Set up stack pointer
        call main               # Execute main program
        halt                    # Terminate program

# Sample linked list
.align 8
# source block
src:    .quad 0x00a
	.quad 0x0b0
        .quad 0xc00

# destination block
dest:
        .quad 0x111
	.quad 0x222
        .quad 0x333

main:
        irmovq src,%rdi
	irmovq dest,%rsi
	irmovq 3,%rdx
        call copy_block
        ret

copy_block:
        xorq %rax,%rax		# result = 0
	irmovq $8,%r8		# immediate value for arithmetic
	irmovq $1,%r9		# immediate value for arithmetic		
	jmp test

loop:
	mrmovq (%rdi),%r10	# val = *src
	addq %r8,%rdi		# src = src + 1
	rmmovq %r10,(%rsi)	# *dest = val
	addq %r8,%rsi		# dest = dest + 1
	xorq %r10,%rax		# result = result ^ val
	subq %r9,%rdx		# len = len -1
test:
	andq %rdx,%rdx		# while	condition/set CC
	jne loop
	ret

#Stack sarts here and grows to lower addresses
       .pos 0x200
stack:

# Taylor Hansen & Xuecong Fan
# A01476037 & A01972388

# Execution begins at address 0
        .pos 0
        irmovq stack, %rsp      # Set up stack pointer
        call main               # Execute main program
        halt                    # Terminate program

# Sample linked list
.align 8
ele1:   .quad 0x00a
	.quad ele2
ele2:
	.quad 0x0b0
	.quad ele3
ele3:
	.quad 0xc00
	.quad 0

main:
	irmovq ele1,%rdi
	call sum_list
	ret

sum_list:
	xorq %rax,%rax		# val = 0;
        jmp test
loop:
	mrmovq (%rdi),%r10	# container = (*ls).val;
	addq %r10,%rax		# val = val + container;
	mrmovq 8(%rdi),%rdi	# ls = (*ls).next
test:
	andq %rdi,%rdi		# test while loop condition/set CC
	jne loop		# if not nullptr loop
	ret

#Stack sarts here and grows to lower addresses
       .pos 0x200
stack:

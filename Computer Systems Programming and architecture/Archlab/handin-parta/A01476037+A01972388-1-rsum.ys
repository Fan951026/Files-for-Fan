# Taylor Hansen & Xuecong Fan
# A01476037 & A01972388

# Execution begins at address 0
        .pos 0
        irmovq stack, %rsp      # Set up stack pointer
        call main               # Execute main program
        halt                    # Terminate program

# Sample linked list
.align 8
ele1:   .quad 0x00a
        .quad ele2
ele2:
        .quad 0x0b0
        .quad ele3
ele3:
        .quad 0xc00
        .quad 0

main:
        irmovq ele1,%rdi
        call rsum_list
        ret

rsum_list:
	pushq %r12              # save %r12
	xorq %rax,%rax		# result = 0
	andq %rdi,%rdi		# if condition/set CC
	je end
	mrmovq (%rdi),%r12	# val = (*ls).val
	mrmovq 8(%rdi),%rdi	# ls = (*ls).next
	call rsum_list		# recursion
	addq %r12,%rax		# return val + rest
end:
	popq %r12		# %r12 = rest
	ret

#Stack sarts here and grows to lower addresses
       .pos 0x200
stack:
